# Generated by Django 5.2 on 2025-09-28 19:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_alter_auditlog_new_values_alter_auditlog_old_values'),
    ]

    operations = [
        migrations.AlterField(
            model_name='auditlog',
            name='action',
            field=models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('archive', 'Archive'), ('restore', 'Restore'), ('login', 'Login'), ('logout', 'Logout'), ('approve', 'Approve'), ('reject', 'Reject'), ('submit', 'Submit'), ('download', 'Download'), ('backup', 'Backup'), ('restore', 'Restore'), ('password_change', 'Password Change'), ('resubmit', 'Resubmit'), ('approve_district', 'Approve (District)'), ('approve_liquidator', 'Approve (Liquidator)'), ('approve_division', 'Approve (Division)'), ('liquidate', 'Liquidate'), ('batch_update', 'Batch Update'), ('budget_allocation', 'Budget Allocation')], max_length=20),
        ),
        migrations.CreateModel(
            name='BudgetAllocationNotification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.PositiveSmallIntegerField(help_text='Year for which budget allocation is needed')),
                ('notification_sent_date', models.DateTimeField(auto_now_add=True, help_text='When this notification was sent')),
                ('is_acknowledged', models.BooleanField(default=False, help_text='Whether the accountant has acknowledged this notification')),
                ('acknowledged_at', models.DateTimeField(blank=True, help_text='When the accountant acknowledged this notification', null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, help_text='Accountant who acknowledged this notification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_budget_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year'],
                'unique_together': {('year',)},
            },
        ),
        migrations.CreateModel(
            name='YearlyBudgetAllocation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.PositiveSmallIntegerField(help_text='Year for which this budget is allocated (e.g., 2024)')),
                ('yearly_budget', models.DecimalField(decimal_places=2, help_text='Total yearly budget allocated to the school', max_digits=15)),
                ('allocated_at', models.DateTimeField(auto_now_add=True, help_text='When this budget was allocated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this budget allocation is currently active')),
                ('notes', models.TextField(blank=True, help_text='Optional notes about this budget allocation', null=True)),
                ('allocated_by', models.ForeignKey(blank=True, help_text='Accountant who allocated this budget', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_budgets', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_budget_allocations', to='api.school')),
            ],
            options={
                'ordering': ['-year', 'school__schoolName'],
                'indexes': [models.Index(fields=['year', 'is_active'], name='api_yearlyb_year_98204d_idx'), models.Index(fields=['school', 'year'], name='api_yearlyb_school__a62d46_idx')],
                'unique_together': {('school', 'year')},
            },
        ),
    ]
