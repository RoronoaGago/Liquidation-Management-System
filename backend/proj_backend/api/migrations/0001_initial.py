# Generated by Django 5.2.3 on 2025-06-27 04:29

import api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ListOfPriority',
            fields=[
                ('LOPID', models.AutoField(primary_key=True, serialize=False)),
                ('expenseTitle', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('trainDev', 'Training and Development'), ('transport', 'Travel & Transportation'), ('communication', 'Communication & Utilities'), ('office', 'Office Operations & Supplies'), ('services', 'Services & Maintenance'), ('medical', 'Medical & Food Supplies'), ('misc', 'Miscellaneous')], default='misc', max_length=30)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('requirementID', models.AutoField(primary_key=True, serialize=False)),
                ('requirementTitle', models.CharField(max_length=255)),
                ('is_required', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('schoolId', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('schoolName', models.CharField(max_length=255)),
                ('municipality', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('legislativeDistrict', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(editable=False, max_length=10, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('school_head', 'School Head'), ('school_admin', 'School Administrative Assistant'), ('district_admin', 'District Administrative Assistant'), ('superintendent', 'Division Superintendent'), ('liquidator', 'Liquidator'), ('accountant', 'Division Accountant')], default='school_admin', max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api.school')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_title', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True, null=True)),
                ('notification_date', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications_sent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestManagement',
            fields=[
                ('request_id', models.CharField(default=api.models.generate_request_id, editable=False, max_length=10, primary_key=True, serialize=False, unique=True)),
                ('request_month', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending'), ('downloaded', 'Downloaded'), ('liquidated', 'Liquidated')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_reminder_sent', models.DateField(blank=True, null=True)),
                ('demand_letter_sent', models.BooleanField(default=False)),
                ('demand_letter_date', models.DateField(blank=True, null=True)),
                ('date_approved', models.DateField(blank=True, null=True)),
                ('date_downloaded', models.DateField(blank=True, null=True)),
                ('rejection_comment', models.TextField(blank=True, null=True)),
                ('rejection_date', models.DateField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LiquidationManagement',
            fields=[
                ('LiquidationID', models.CharField(default=api.models.generate_liquidation_id, editable=False, max_length=10, primary_key=True, serialize=False, unique=True)),
                ('comment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review_district', 'Under Review (District)'), ('under_review_division', 'Under Review (Division)'), ('resubmit', 'Needs Revision'), ('approved_district', 'Approved by District'), ('liquidated', 'Liquidated')], default='draft', max_length=30)),
                ('reviewed_at_district', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at_division', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date_districtApproved', models.DateField(blank=True, null=True)),
                ('date_liquidated', models.DateField(blank=True, null=True)),
                ('reviewed_by_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='district_reviewed_liquidations', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='division_reviewed_liquidations', to=settings.AUTH_USER_MODEL)),
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='liquidation', to='api.requestmanagement')),
            ],
        ),
        migrations.CreateModel(
            name='RequestPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.listofpriority')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.requestmanagement')),
            ],
            options={
                'unique_together': {('request', 'priority')},
            },
        ),
        migrations.AddField(
            model_name='requestmanagement',
            name='priorities',
            field=models.ManyToManyField(related_name='requests', through='api.RequestPriority', to='api.listofpriority'),
        ),
        migrations.CreateModel(
            name='PriorityRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priority_reqs', to='api.listofpriority')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priority_reqs', to='api.requirement')),
            ],
            options={
                'unique_together': {('priority', 'requirement')},
            },
        ),
        migrations.AddField(
            model_name='listofpriority',
            name='requirements',
            field=models.ManyToManyField(related_name='priority_requirement', through='api.PriorityRequirement', to='api.requirement'),
        ),
        migrations.CreateModel(
            name='LiquidationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='liquidation_documents/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('reviewer_comment', models.TextField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('liquidation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='api.liquidationmanagement')),
                ('request_priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.requestpriority')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.requirement')),
            ],
            options={
                'unique_together': {('liquidation', 'request_priority', 'requirement')},
            },
        ),
        migrations.CreateModel(
            name='LiquidatorAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(choices=[('all', 'All District'), ('1st', '1st District'), ('2nd', '2nd District')], default='all', max_length=100)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignments_made', to=settings.AUTH_USER_MODEL)),
                ('liquidator', models.ForeignKey(limit_choices_to={'role': 'liquidator'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.school')),
            ],
            options={
                'unique_together': {('liquidator', 'district')},
            },
        ),
    ]
